version: '3.8'

services:
  # Main Business Database (SQL Server)
  sqlserver-main:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: strengthportal-sqlserver-main
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=${SA_PASSWORD}
      - MSSQL_PID=Developer
    ports:
      - "1433:1433"
    volumes:
      - sqlserver_main_data:/var/opt/mssql
      - ./database-scripts/main:/docker-entrypoint-initdb.d
    networks:
      - strengthportal-network
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P ${SA_PASSWORD} -Q 'SELECT 1'"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  # Identity Database (SQL Server - separate instance)
  sqlserver-identity:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: strengthportal-sqlserver-identity
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=${SA_PASSWORD}
      - MSSQL_PID=Developer
    ports:
      - "1434:1433"  # Different port for identity DB
    volumes:
      - sqlserver_identity_data:/var/opt/mssql
      - ./database-scripts/identity:/docker-entrypoint-initdb.d
    networks:
      - strengthportal-network
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P ${SA_PASSWORD} -Q 'SELECT 1'"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  # Main Business API
  api:
    build:
      context: .
      dockerfile: StrengthPortal.Api/Dockerfile
    container_name: strengthportal-api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__DefaultConnection=Server=sqlserver-main,1433;Database=StrengthPortal;User Id=sa;Password=${SA_PASSWORD};TrustServerCertificate=true;
      - IdentityApi__BaseUrl=http://identity-api:8081
    ports:
      - "8080:8080"
    depends_on:
      sqlserver-main:
        condition: service_healthy
      identity-api:
        condition: service_started
    networks:
      - strengthportal-network
    volumes:
      - ./StrengthPortal.Api:/app/source
    restart: unless-stopped

  # Identity API
  identity-api:
    build:
      context: .
      dockerfile: StrengthPortal.Identity/Dockerfile
    container_name: strengthportal-identity-api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8081
      - ConnectionStrings__DefaultConnection=Server=sqlserver-identity,1433;Database=StrengthPortalIdentity;User Id=sa;Password=${SA_PASSWORD};TrustServerCertificate=true;
      - JWT__SecretKey=${JWT_SECRET_KEY}
      - JWT__Issuer=StrengthPortal
      - JWT__Audience=StrengthPortal
    ports:
      - "8081:8081"
    depends_on:
      sqlserver-identity:
        condition: service_healthy
    networks:
      - strengthportal-network
    volumes:
      - ./StrengthPortal.Identity:/app/source
    restart: unless-stopped

volumes:
  sqlserver_main_data:
    driver: local
  sqlserver_identity_data:
    driver: local

networks:
  strengthportal-network:
    driver: bridge
